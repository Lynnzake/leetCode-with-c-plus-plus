给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。

示例：

给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/two-sum
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


#include <iostream>
#include <map>
using namespace std;
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        //vector<int>temp;
        vector<int>temp(2,-1);
        map<int,int>m;
        for(int i =0;i<nums.size();i++){//将索引和数据放到map容器中   
                m.insert(make_pair(nums[i],i));
        }
        for(int i =0;i<nums.size();i++){
            if(m.count(target-nums[i]) >0&&m[target-nums[i]]!=i){
                //能不调用函数还是不要调用函数
                //temp.push_back(i);
                //temp.push_back(m[target-nums[i]]);
                temp[0] = i;
                temp[1] = m[target-nums[i]];
                return temp;
            }
        }
        return temp;
    }
};
